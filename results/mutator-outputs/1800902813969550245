Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [ReviewMappingController]>
Integration:     Mutant::Integration::Null
Jobs:            1
Includes:        []
Requires:        ["./config/environment"]
(00/143) 100% - killtime: 0.00s runtime: 0.00s overhead: 0.00s
(01/143)  25% - killtime: 0.00s runtime: 1.01s overhead: 1.01s
(01/143)  12% - killtime: 0.00s runtime: 2.01s overhead: 2.01s
(01/143)   8% - killtime: 0.00s runtime: 3.01s overhead: 3.01s
(01/143)   6% - killtime: 0.00s runtime: 4.01s overhead: 4.01s
(01/143)   5% - killtime: 0.00s runtime: 5.02s overhead: 5.02s
(01/143)   4% - killtime: 0.00s runtime: 6.02s overhead: 6.02s
(01/143)   3% - killtime: 0.00s runtime: 7.02s overhead: 7.02s
(01/143)   3% - killtime: 0.00s runtime: 8.02s overhead: 8.02s
(01/143)   2% - killtime: 0.00s runtime: 9.02s overhead: 9.02s
(01/143)   2% - killtime: 0.00s runtime: 10.02s overhead: 10.02s
(01/143)   2% - killtime: 0.00s runtime: 11.02s overhead: 11.02s
(01/143)   2% - killtime: 0.00s runtime: 12.03s overhead: 12.03s
(01/143)   2% - killtime: 0.00s runtime: 13.03s overhead: 13.03s
(01/143)   1% - killtime: 0.00s runtime: 14.03s overhead: 14.03s
(01/143)   1% - killtime: 0.00s runtime: 15.04s overhead: 15.04s
(01/143)   1% - killtime: 0.00s runtime: 16.04s overhead: 16.04s
(01/143)   1% - killtime: 0.00s runtime: 17.04s overhead: 17.04s
(01/143)   1% - killtime: 0.00s runtime: 18.04s overhead: 18.04s
(01/143)   1% - killtime: 0.00s runtime: 19.04s overhead: 19.04s
(01/143)   1% - killtime: 0.00s runtime: 20.05s overhead: 20.05s
(01/143)   1% - killtime: 0.00s runtime: 21.05s overhead: 21.05s
(01/143)   1% - killtime: 0.00s runtime: 22.05s overhead: 22.05s
(01/143)   1% - killtime: 0.00s runtime: 23.05s overhead: 23.05s
(01/143)   1% - killtime: 0.00s runtime: 24.05s overhead: 24.05s
(01/143)   1% - killtime: 0.00s runtime: 25.06s overhead: 25.06s
(01/143)   1% - killtime: 0.00s runtime: 26.06s overhead: 26.06s
(01/143)   0% - killtime: 0.00s runtime: 27.06s overhead: 27.06s
(01/143)   0% - killtime: 0.00s runtime: 28.06s overhead: 28.06s
(01/143)   0% - killtime: 0.00s runtime: 29.06s overhead: 29.06s
(01/143)   0% - killtime: 0.00s runtime: 30.07s overhead: 30.07s
(01/143)   0% - killtime: 0.00s runtime: 31.07s overhead: 31.07s
(01/143)   0% - killtime: 0.00s runtime: 32.07s overhead: 32.07s
(01/143)   0% - killtime: 0.00s runtime: 33.08s overhead: 33.08s
(01/143)   0% - killtime: 0.00s runtime: 34.08s overhead: 34.08s
(01/143)   0% - killtime: 0.00s runtime: 35.08s overhead: 35.08s
(01/143)   0% - killtime: 0.00s runtime: 36.09s overhead: 36.09s
(01/143)   0% - killtime: 0.00s runtime: 37.09s overhead: 37.09s
(01/143)   0% - killtime: 0.00s runtime: 38.09s overhead: 38.09s
ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:4d1a3
@@ -1,12 +1,4 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  raise
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:59eb4
@@ -1,12 +1,3 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
-  redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:a9d04
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  nil
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:12c75
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  self
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:455f5
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map__mutant__ = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:2c139
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = nil
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:7acbd
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = self
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:49e2f
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:84787
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = params[:id]
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:7329d
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = self.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:55362
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:ad8f2
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(nil)
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:0eec3
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(self)
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:5e37f
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(params)
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:fc490
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(params.at(:id))
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:9b7a8
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(params.fetch(:id))
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:7d6d2
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(params.key?(:id))
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:9a3c0
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(:id)
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:a4b6c
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(self[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:cedbf
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(params[])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:93231
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(params[nil])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:e3ad6
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(params[self])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:b213d
@@ -1,12 +1,12 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
+  review_response_map = ReviewResponseMap.find(params[:id__mutant__])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:18bb1
@@ -1,12 +1,4 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
-  redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:ec0fe
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  nil
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:a742e
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  self
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:e2b96
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  assignment_id__mutant__ = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:e3e35
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  assignment_id = nil
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:d0978
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  assignment_id = self
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:1a7c9
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  assignment_id = review_response_map.assignment
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:ba372
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  assignment_id = self.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:d9cfe
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  assignment_id = review_response_map.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:3acc4
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
+  assignment_id = self.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:98a02
@@ -1,12 +1,5 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
-  redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:0f995
@@ -1,12 +1,7 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
+  nil
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:37c7c
@@ -1,12 +1,7 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
+  self
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:fcd4d
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if nil
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:67c67
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if Response.exists?(map_id: review_response_map.id)
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:afe9a
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!self)
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:ff452
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response)
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:4b442
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!{ map_id: review_response_map.id })
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:d806b
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!self.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:a24b6
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?)
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:a7752
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(nil))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:f1897
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(self))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:90386
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?({}))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:e44f4
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(nil => review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:cf733
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(self => review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:c4eb6
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(map_id__mutant__: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:4ea54
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(map_id: nil))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:e0685
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(map_id: self))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:c608c
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(map_id: review_response_map))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:f642d
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!Response.exists?(map_id: self.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:2a064
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if (!(!Response.exists?(map_id: review_response_map.id)))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:74bc8
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if true
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:a26c0
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
+  if false
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:e1910
@@ -1,12 +1,9 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:4de3f
@@ -1,12 +1,8 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
+  review_response_map.destroy
+  flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:bae3a
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
+    nil
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:bcf49
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
+    self
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:dfb47
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
+    review_response_map
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:15d87
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
+    self.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:0714a
@@ -1,12 +1,11 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:96942
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    nil
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:85ae0
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    self
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:0f069
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:575d4
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = nil
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:a15c8
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = self
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:c8f2b
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = ((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name)
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:b8441
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (nil + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:2c512
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (self + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:f9f0c
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = ((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:4f7f4
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = ((nil + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:bbaf7
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = ((self + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:0871b
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = ((("The review mapping for \"" + review_response_map.reviewee.name) + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:2f000
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((nil + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:8960d
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((self + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:cec3d
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = ((("The review mapping for \"" + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:4b161
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = ((((nil + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:44741
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = ((((self + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:b233a
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((review_response_map.reviewee.name + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:86387
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + nil) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:52991
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + self) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:b5bf5
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:e172c
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + self.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:1b164
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:c9d80
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + self.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:65a3c
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (("\" and \"" + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:676b1
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + nil) + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:77abe
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + self) + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:12f23
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (review_response_map.reviewer.name + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:26fec
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + nil) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:54bd5
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + self) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:be037
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:70b86
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + self.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:9775c
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:4bc00
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + self.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:dbeb4
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = "\" has been deleted."
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:9bc83
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + nil)
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:576e3
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + self)
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:0340b
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success]
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:fe90a
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    ((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted."
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:9c424
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:3611b
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[nil] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:c5e33
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[self] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:689a5
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
+    flash[:success__mutant__] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:7ec80
@@ -1,12 +1,11 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:cff9a
@@ -1,12 +1,10 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:113be
@@ -1,12 +1,7 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
+  flash[:error] = "This review has already been done. It cannot been deleted."
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:fa0ba
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    nil
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:af946
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    self
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:1c046
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    flash
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:d15eb
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    flash[:error] = nil
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:6de1c
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    flash[:error] = self
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:65f2d
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    flash[:error]
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:2ab81
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:2b17b
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    flash[] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:329ec
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    flash[nil] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:c9a44
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    flash[self] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:b8568
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
-    flash[:error] = "This review has already been done. It cannot been deleted."
+    flash[:error__mutant__] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:978d4
@@ -1,12 +1,9 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
+  unless (!Response.exists?(map_id: review_response_map.id))
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:95f81
@@ -1,12 +1,11 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:55108
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  nil
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:87b60
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  self
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:15f8d
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  { action: "list_mappings", id: assignment_id }
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:6ba4b
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:462b7
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(nil)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:b5873
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(self)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:b22fc
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to({})
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:5df02
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(nil => "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:790f0
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(self => "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:71b54
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action__mutant__: "list_mappings", id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:40fb2
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action: nil, id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:c1c46
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action: self, id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:d8ee1
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(id: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:5e7d2
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action: "list_mappings", nil => assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:2c5b8
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action: "list_mappings", self => assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:01d6e
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action: "list_mappings", id__mutant__: assignment_id)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:1abee
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action: "list_mappings", id: nil)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:56af0
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action: "list_mappings", id: self)
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:448f7
@@ -1,12 +1,12 @@
 def delete_reviewer
   review_response_map = ReviewResponseMap.find(params[:id])
   assignment_id = review_response_map.assignment.id
   if (!Response.exists?(map_id: review_response_map.id))
     review_response_map.destroy
     flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
   else
     flash[:error] = "This review has already been done. It cannot been deleted."
   end
-  redirect_to(action: "list_mappings", id: assignment_id)
+  redirect_to(action: "list_mappings")
 end
-----------------------
evil:ReviewMappingController#delete_reviewer:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/review_mapping_controller.rb:2:5564a
@@ -1,12 +1,4 @@
 def delete_reviewer
-  review_response_map = ReviewResponseMap.find(params[:id])
-  assignment_id = review_response_map.assignment.id
-  if (!Response.exists?(map_id: review_response_map.id))
-    review_response_map.destroy
-    flash[:success] = (((("The review mapping for \"" + review_response_map.reviewee.name) + "\" and \"") + review_response_map.reviewer.name) + "\" has been deleted.")
-  else
-    flash[:error] = "This review has already been done. It cannot been deleted."
-  end
   redirect_to(action: "list_mappings", id: assignment_id)
 end
-----------------------
Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [ReviewMappingController]>
Integration:     Mutant::Integration::Null
Jobs:            1
Includes:        []
Requires:        ["./config/environment"]
Subjects:        1
Mutations:       143
Results:         143
Kills:           1
Alive:           142
Runtime:         38.09s
Killtime:        0.00s
Overhead:        Inf%
Mutations/s:     3.75
Coverage:        0.70%
