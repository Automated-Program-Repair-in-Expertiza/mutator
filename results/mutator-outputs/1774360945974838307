Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [ImportFileController]>
Integration:     Mutant::Integration::Null
Jobs:            1
Includes:        []
Requires:        ["./config/environment"]
(00/478) 100% - killtime: 0.00s runtime: 0.00s overhead: 0.00s
(01/478)  16% - killtime: 0.00s runtime: 1.00s overhead: 1.00s
(01/478)  10% - killtime: 0.00s runtime: 2.01s overhead: 2.01s
(01/478)   7% - killtime: 0.00s runtime: 3.01s overhead: 3.01s
(01/478)   6% - killtime: 0.00s runtime: 4.01s overhead: 4.01s
(01/478)   4% - killtime: 0.00s runtime: 5.01s overhead: 5.01s
(01/478)   4% - killtime: 0.00s runtime: 6.02s overhead: 6.02s
(01/478)   3% - killtime: 0.00s runtime: 7.02s overhead: 7.02s
(01/478)   3% - killtime: 0.00s runtime: 8.02s overhead: 8.02s
(01/478)   2% - killtime: 0.00s runtime: 9.02s overhead: 9.02s
(01/478)   2% - killtime: 0.00s runtime: 10.02s overhead: 10.02s
(01/478)   2% - killtime: 0.00s runtime: 11.03s overhead: 11.03s
(01/478)   1% - killtime: 0.00s runtime: 12.03s overhead: 12.03s
(01/478)   1% - killtime: 0.00s runtime: 13.03s overhead: 13.03s
(02/478)   3% - killtime: 0.13s runtime: 14.03s overhead: 13.90s
(02/478)   2% - killtime: 0.13s runtime: 15.03s overhead: 14.90s
(02/478)   2% - killtime: 0.13s runtime: 16.03s overhead: 15.90s
(02/478)   2% - killtime: 0.13s runtime: 17.03s overhead: 16.90s
(02/478)   2% - killtime: 0.13s runtime: 18.03s overhead: 17.90s
(02/478)   2% - killtime: 0.13s runtime: 19.03s overhead: 18.90s
(02/478)   2% - killtime: 0.13s runtime: 20.04s overhead: 19.90s
(02/478)   2% - killtime: 0.13s runtime: 21.04s overhead: 20.91s
(02/478)   2% - killtime: 0.13s runtime: 22.04s overhead: 21.91s
(02/478)   1% - killtime: 0.13s runtime: 23.04s overhead: 22.91s
(02/478)   1% - killtime: 0.13s runtime: 24.04s overhead: 23.91s
(02/478)   1% - killtime: 0.13s runtime: 25.04s overhead: 24.91s
(02/478)   1% - killtime: 0.13s runtime: 26.04s overhead: 25.91s
(02/478)   1% - killtime: 0.13s runtime: 27.05s overhead: 26.92s
(02/478)   1% - killtime: 0.13s runtime: 28.05s overhead: 27.92s
(02/478)   1% - killtime: 0.13s runtime: 29.05s overhead: 28.92s
(02/478)   1% - killtime: 0.13s runtime: 30.05s overhead: 29.92s
(02/478)   1% - killtime: 0.13s runtime: 31.06s overhead: 30.93s
(02/478)   1% - killtime: 0.13s runtime: 32.06s overhead: 31.93s
(02/478)   1% - killtime: 0.13s runtime: 33.06s overhead: 32.93s
(02/478)   1% - killtime: 0.13s runtime: 34.07s overhead: 33.94s
(02/478)   1% - killtime: 0.13s runtime: 35.07s overhead: 34.94s
(02/478)   1% - killtime: 0.13s runtime: 36.07s overhead: 35.94s
(02/478)   1% - killtime: 0.13s runtime: 37.09s overhead: 36.95s
(02/478)   1% - killtime: 0.13s runtime: 38.09s overhead: 37.96s
(02/478)   1% - killtime: 0.13s runtime: 39.09s overhead: 38.96s
(02/478)   1% - killtime: 0.13s runtime: 40.09s overhead: 39.96s
(02/478)   1% - killtime: 0.13s runtime: 41.09s overhead: 40.96s
(02/478)   1% - killtime: 0.13s runtime: 42.09s overhead: 41.96s
(02/478)   1% - killtime: 0.13s runtime: 43.09s overhead: 42.96s
(02/478)   1% - killtime: 0.13s runtime: 44.10s overhead: 43.96s
(02/478)   1% - killtime: 0.13s runtime: 45.10s overhead: 44.96s
(02/478)   1% - killtime: 0.13s runtime: 46.10s overhead: 45.97s
(02/478)   0% - killtime: 0.13s runtime: 47.10s overhead: 46.97s
(02/478)   0% - killtime: 0.13s runtime: 48.10s overhead: 47.97s
(02/478)   0% - killtime: 0.13s runtime: 49.10s overhead: 48.97s
(02/478)   0% - killtime: 0.13s runtime: 50.10s overhead: 49.97s
(02/478)   0% - killtime: 0.13s runtime: 51.10s overhead: 50.97s
(02/478)   0% - killtime: 0.13s runtime: 52.10s overhead: 51.97s
(02/478)   0% - killtime: 0.13s runtime: 53.11s overhead: 52.97s
(02/478)   0% - killtime: 0.13s runtime: 54.11s overhead: 53.98s
(02/478)   0% - killtime: 0.13s runtime: 55.11s overhead: 54.98s
(02/478)   0% - killtime: 0.13s runtime: 56.11s overhead: 55.98s
(02/478)   0% - killtime: 0.13s runtime: 57.11s overhead: 56.98s
(02/478)   0% - killtime: 0.13s runtime: 58.11s overhead: 57.98s
(02/478)   0% - killtime: 0.13s runtime: 59.11s overhead: 58.98s
(02/478)   0% - killtime: 0.13s runtime: 60.11s overhead: 59.98s
(02/478)   0% - killtime: 0.13s runtime: 61.11s overhead: 60.98s
(02/478)   0% - killtime: 0.13s runtime: 62.12s overhead: 61.98s
(02/478)   0% - killtime: 0.13s runtime: 63.12s overhead: 62.99s
(02/478)   0% - killtime: 0.13s runtime: 64.12s overhead: 63.99s
(02/478)   0% - killtime: 0.13s runtime: 65.12s overhead: 64.99s
(02/478)   0% - killtime: 0.13s runtime: 66.12s overhead: 65.99s
(02/478)   0% - killtime: 0.13s runtime: 67.12s overhead: 66.99s
(02/478)   0% - killtime: 0.13s runtime: 68.12s overhead: 67.99s
(02/478)   0% - killtime: 0.13s runtime: 69.12s overhead: 68.99s
(02/478)   0% - killtime: 0.13s runtime: 70.13s overhead: 69.99s
(02/478)   0% - killtime: 0.13s runtime: 71.13s overhead: 70.99s
(02/478)   0% - killtime: 0.13s runtime: 72.13s overhead: 72.00s
(02/478)   0% - killtime: 0.13s runtime: 73.13s overhead: 73.00s
(02/478)   0% - killtime: 0.13s runtime: 74.13s overhead: 74.00s
(02/478)   0% - killtime: 0.13s runtime: 75.13s overhead: 75.00s
(02/478)   0% - killtime: 0.13s runtime: 76.13s overhead: 76.00s
(02/478)   0% - killtime: 0.13s runtime: 77.14s overhead: 77.00s
(02/478)   0% - killtime: 0.13s runtime: 78.14s overhead: 78.01s
(02/478)   0% - killtime: 0.13s runtime: 79.14s overhead: 79.01s
(02/478)   0% - killtime: 0.13s runtime: 80.14s overhead: 80.01s
(02/478)   0% - killtime: 0.13s runtime: 81.14s overhead: 81.01s
(02/478)   0% - killtime: 0.13s runtime: 82.15s overhead: 82.01s
(02/478)   0% - killtime: 0.13s runtime: 83.15s overhead: 83.02s
(02/478)   0% - killtime: 0.13s runtime: 84.16s overhead: 84.02s
(02/478)   0% - killtime: 0.13s runtime: 85.17s overhead: 85.04s
(02/478)   0% - killtime: 0.13s runtime: 86.17s overhead: 86.04s
(02/478)   0% - killtime: 0.13s runtime: 87.18s overhead: 87.05s
(02/478)   0% - killtime: 0.13s runtime: 88.18s overhead: 88.05s
(02/478)   0% - killtime: 0.13s runtime: 89.18s overhead: 89.05s
(02/478)   0% - killtime: 0.13s runtime: 90.18s overhead: 90.05s
(02/478)   0% - killtime: 0.13s runtime: 91.19s overhead: 91.05s
(02/478)   0% - killtime: 0.13s runtime: 92.19s overhead: 92.06s
(02/478)   0% - killtime: 0.13s runtime: 93.19s overhead: 93.06s
(02/478)   0% - killtime: 0.13s runtime: 94.19s overhead: 94.06s
(02/478)   0% - killtime: 0.13s runtime: 95.19s overhead: 95.06s
(02/478)   0% - killtime: 0.13s runtime: 96.20s overhead: 96.06s
ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:92164
@@ -1,43 +1,43 @@
-def importFile(session, params)
+def importFile
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a462f
@@ -1,43 +1,43 @@
-def importFile(session, params)
+def importFile(params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:245d6
@@ -1,43 +1,43 @@
-def importFile(session, params)
+def importFile(session)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b31ea
@@ -1,43 +1,43 @@
-def importFile(session, params)
+def importFile(_session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e7938
@@ -1,43 +1,43 @@
-def importFile(session, params)
+def importFile(session, _params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:964af
@@ -1,43 +1,4 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
-  file = params["file"].tempfile
-  errors = []
-  first_row_read = false
-  row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
-  errors
+  raise
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:04df6
@@ -1,43 +1,3 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
-  file = params["file"].tempfile
-  errors = []
-  first_row_read = false
-  row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
-  errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8a7d2
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  nil
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2bca4
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  self
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ae0d9
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  delimiter__mutant__ = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:be69d
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  delimiter = nil
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:958b5
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  delimiter = self
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:49fea
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  delimiter = params
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:fb1f2
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  delimiter = get_delimiter
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ede2a
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  delimiter = get_delimiter(nil)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:fb8e5
@@ -1,43 +1,43 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
+  delimiter = get_delimiter(self)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c5301
@@ -1,43 +1,4 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
-  errors = []
-  first_row_read = false
-  row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
-  errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9af35
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  nil
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2dee6
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  self
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:33cbc
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file__mutant__ = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6b7cd
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = nil
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:da082
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = self
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7e17b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = params["file"]
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:21dd1
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = self.tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:576d0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = params.tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:03c1d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = params.at("file").tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:45df4
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = params.fetch("file").tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e9521
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = params.key?("file").tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:0fb0b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = "file".tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a2d9c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = self["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:12fa9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = params[].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:cdb61
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = params[nil].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9e40a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
-  file = params["file"].tempfile
+  file = params[self].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:bbc87
@@ -1,43 +1,5 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
   file = params["file"].tempfile
-  errors = []
-  first_row_read = false
-  row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
-  errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:caea0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
-  errors = []
+  nil
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:844b2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
-  errors = []
+  self
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:30a34
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
-  errors = []
+  errors__mutant__ = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2955c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
-  errors = []
+  errors = nil
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:43254
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
-  errors = []
+  errors = self
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6ccc7
@@ -1,43 +1,6 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
-  file = params["file"].tempfile
   errors = []
-  first_row_read = false
-  row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
-  errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7d904
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
-  first_row_read = false
+  nil
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
+    row_header = parse_line(line.downcase, delimiter)
+    first_row_read = true
+    if row_header.include?("email")
+      next
+    else
+      row_header = {}
+    end if (first_row_read == false)
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:688b8
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
-  first_row_read = false
+  self
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
+    row_header = parse_line(line.downcase, delimiter)
+    first_row_read = true
+    if row_header.include?("email")
+      next
+    else
+      row_header = {}
+    end if (first_row_read == false)
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5efb1
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
-  first_row_read = false
+  first_row_read__mutant__ = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
+    row_header = parse_line(line.downcase, delimiter)
+    first_row_read = true
+    if row_header.include?("email")
+      next
+    else
+      row_header = {}
+    end if (first_row_read == false)
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1a3a2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
-  first_row_read = false
+  first_row_read = nil
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:69e27
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
-  first_row_read = false
+  first_row_read = true
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8253a
@@ -1,43 +1,7 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
-  file = params["file"].tempfile
-  errors = []
   first_row_read = false
-  row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
-  errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6395d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
-  row_header = {}
+  nil
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3578a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
-  row_header = {}
+  self
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2dc77
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
-  row_header = {}
+  row_header__mutant__ = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:815da
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
-  row_header = {}
+  row_header = nil
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ee467
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
-  row_header = {}
+  row_header = self
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d357d
@@ -1,43 +1,8 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
-  file = params["file"].tempfile
-  errors = []
-  first_row_read = false
   row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
-  errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a728f
@@ -1,43 +1,10 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
+  nil
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ef071
@@ -1,43 +1,10 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
+  self
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d0999
@@ -1,43 +1,10 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
+  file.each_line
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:10fbb
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
-  file.each_line do |line|
+  self.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:165f2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
-  file.each_line do |line|
+  file.each_line do
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:bb61d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
-  file.each_line do |line|
+  file.each_line do |_line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:dd866
@@ -1,43 +1,11 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:71cdf
@@ -1,43 +1,12 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
+    raise
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:12444
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
+    nil
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:51a9c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
+    self
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c399e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
+    line
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:0e08d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
+    self.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1cc44
@@ -1,43 +1,12 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2ada4
@@ -1,43 +1,35 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
+    nil
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:30e47
@@ -1,43 +1,35 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
+    self
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8d4e8
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if nil
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:16292
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if first_row_read
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f7cdf
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if (nil == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:622da
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if (self == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b7c03
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if first_row_read.eql?(false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5cb86
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if first_row_read.equal?(false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:37bcf
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if false
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:accad
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if (first_row_read == nil)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a48c8
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if (first_row_read == true)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:19630
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if (!(first_row_read == false))
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:776a5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
+    if true
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:0aed9
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
+    row_header = parse_line(line.downcase, delimiter)
+    first_row_read = true
+    if row_header.include?("email")
+      next
+    else
+      row_header = {}
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ddd96
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      nil
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e8d7f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      self
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:95279
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header__mutant__ = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b1a9f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = nil
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e2e0b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = self
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3013a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:97e97
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line(nil, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8bb61
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line(self, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5d959
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line(line, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:69542
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line(self.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:613a0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line(delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:72aed
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line(line.downcase, nil)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6cff5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line(line.downcase, self)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:350c9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
+      row_header = parse_line(line.downcase)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1075f
@@ -1,43 +1,37 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:77aa0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
+      nil
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3db09
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
+      self
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f04cd
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
+      first_row_read__mutant__ = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b5160
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
+      first_row_read = nil
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1bd14
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
+      first_row_read = false
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6f68c
@@ -1,43 +1,38 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5f357
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
+      nil
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:54168
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
+      self
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:14e52
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if nil
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5aee5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if row_header
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a8c83
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if "email"
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:dd676
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if self.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b5d64
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if row_header.include?
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:66734
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if row_header.include?(nil)
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:dfeb1
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if row_header.include?(self)
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:0371d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if (!row_header.include?("email"))
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4dcc3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if true
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6d1bd
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
+      if false
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f39c8
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
-        next
-      else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:28d71
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
+      next
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:55970
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
-        next
+        nil
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7525d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
-        next
+        self
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:42865
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
-        next
+        break
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c51ff
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
-      else
-        row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4be3c
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
+      row_header = {}
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:577dd
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
-        row_header = {}
+        nil
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:bc5bc
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
-        row_header = {}
+        self
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:09171
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
-        row_header = {}
+        row_header__mutant__ = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2f484
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
-        row_header = {}
+        row_header = nil
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3dd8a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
-        row_header = {}
+        row_header = self
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:dbbff
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
-      if row_header.include?("email")
-        next
-      else
+      unless row_header.include?("email")
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:47e3d
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:de259
@@ -1,43 +1,21 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8cd4d
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
-      next
-    end
+    nil
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:42583
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
-      next
-    end
+    self
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:16019
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
+    if nil
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:17491
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
+    if line
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c423b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
+    if self.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f5075
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
+    if (!line.empty?)
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:648f1
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
+    if true
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:211d2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
+    if false
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6e7e6
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
-    if line.empty?
-      next
-    end
+    next
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7c0a3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
-      next
+      nil
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:75e27
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
-      next
+      self
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ded18
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
-      next
+      break
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2a510
@@ -1,43 +1,24 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
     if line.empty?
       next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:03214
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    nil
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f706a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    self
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4a754
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row__mutant__ = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:83a15
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = nil
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5d95b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = self
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4fb73
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = parse_line
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2419c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = parse_line(nil, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7e147
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = parse_line(self, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f8e1b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = parse_line(delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:84aee
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = parse_line(line, nil)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:062cf
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = parse_line(line, self)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:849bc
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
-    row = parse_line(line, delimiter)
+    row = parse_line(line)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6fe74
@@ -1,43 +1,25 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
     row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:0427b
@@ -1,43 +1,30 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
+      nil
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f3df4
@@ -1,43 +1,30 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
+      self
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7978f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if nil
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4c75a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if (params[:model] == "AssignmentTeam")
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2bc63
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if (params[:model] == "CourseTeam")
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:28c29
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") && (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:12463
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((!(params[:model] == "AssignmentTeam")) || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ce6d6
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if (nil || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1485e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if (self || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e06f2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if (params[:model] || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d051a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((nil == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:72cf3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((self == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1b1dd
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:fcbb2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params.at(:model) == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:93f3c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params.fetch(:model) == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:48da9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params.key?(:model) == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3fd53
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((:model == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:bb1b0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((self[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:456f3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6d519
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[nil] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:dbc4f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[self] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:24915
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model__mutant__] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e7c65
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if (params[:model].eql?("AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4010a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if (params[:model].equal?("AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1c1d5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ("AssignmentTeam" || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:59180
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == nil) || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1e6c1
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == self) || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4fc66
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || nil)
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6c9a9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || self)
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:86298
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || params[:model])
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:428b2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (nil == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:35f27
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (self == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a4fd8
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:87d8d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params.at(:model) == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:42766
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params.fetch(:model) == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:cdfa9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params.key?(:model) == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b34a0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (:model == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:974db
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (self[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3b088
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params[] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:76327
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params[nil] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ed965
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params[self] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:35a48
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params[:model__mutant__] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:de26e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || params[:model].eql?("CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:24d50
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || params[:model].equal?("CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:cbdd5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || "CourseTeam")
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:02e14
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params[:model] == nil))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8de80
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if ((params[:model] == "AssignmentTeam") || (params[:model] == self))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3b1b2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if (!((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam")))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8bf5d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if true
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:240c0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
+      if false
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a43de
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f061f
@@ -1,43 +1,30 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
+      Object.const_get(params[:model]).import(row, params[:id], params[:options])
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:54b34
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        nil
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:994cb
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        self
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6a327
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3755d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        self.import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:15fd3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:fed1b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        params[:model].import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ce78b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        self.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5a978
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get.import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:eb5ed
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(nil).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:285ff
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(self).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:21279
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e760a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params.at(:model)).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d9e96
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params.fetch(:model)).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:58fab
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params.key?(:model)).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1bba3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(:model).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:992a3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(self[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c0852
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:06cd6
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[nil]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3967f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[self]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f3fe4
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model__mutant__]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b0e64
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f9d24
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(nil, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:cef78
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(self, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f7a0f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:60836
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, nil, params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f43c6
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, self, params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e5fd7
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params, params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:342c2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params.at(:id), params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1a64c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params.fetch(:id), params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2b228
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params.key?(:id), params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:614aa
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, :id, params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6f5db
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, self[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:cd614
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:03c05
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[nil], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6be5b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[self], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ba8f5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id__mutant__], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:224e8
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:fdb68
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], nil)
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c8f2b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], self)
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:88087
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], params)
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7d4af
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], params.at(:options))
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d2cbc
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], params.fetch(:options))
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f0bab
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], params.key?(:options))
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3838e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], :options)
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b4539
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], self[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:28b06
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], params[])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2996e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], params[nil])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:16bd9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], params[self])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:be37d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id], params[:options__mutant__])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b854b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+        Object.const_get(params[:model]).import(row, params[:id])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:59617
@@ -1,43 +1,32 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f4755
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
+      if (params[:model] == "SignUpTopic")
+        session[:assignment_id] = params[:id]
+        Object.const_get(params[:model]).import(row, session, params[:id])
       else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+        if (row_header.count > 0)
+          Object.const_get(params[:model]).import(row, row_header, session, params[:id])
         else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
+          Object.const_get(params[:model]).import(row, nil, session, params[:id])
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:be013
@@ -1,43 +1,34 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
+        nil
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:bf723
@@ -1,43 +1,34 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
+        self
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:75ddd
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if nil
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ef0bc
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if params[:model]
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9d880
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (nil == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:947f0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (self == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a8555
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d4554
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params.at(:model) == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f24c6
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params.fetch(:model) == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:62aba
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params.key?(:model) == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d120f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (:model == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1d181
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (self[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:eecae
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params[] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b03f9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params[nil] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6097a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params[self] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a718d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params[:model__mutant__] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7baf9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if params[:model].eql?("SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:af42b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if params[:model].equal?("SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:60cff
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if "SignUpTopic"
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f34e2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params[:model] == nil)
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:77ef0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (params[:model] == self)
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:194ed
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if (!(params[:model] == "SignUpTopic"))
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b1d55
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if true
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3e60f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
+        if false
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:90a81
@@ -1,43 +1,40 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:db446
@@ -1,43 +1,35 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
+        session[:assignment_id] = params[:id]
+        Object.const_get(params[:model]).import(row, session, params[:id])
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:15819
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          nil
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7b58f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          self
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:90b6a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:72499
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = nil
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:749fa
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = self
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7e3c1
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = params
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:38d5b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = params.at(:id)
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1e29c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = params.fetch(:id)
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2d35d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = params.key?(:id)
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f0078
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = :id
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3d458
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = self[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d2588
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = params[]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4f445
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = params[nil]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:cc9a4
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = params[self]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:da3fc
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id] = params[:id__mutant__]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:20eb9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:788b5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c6aba
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:efbc2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[nil] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:92296
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[self] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:33d0e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
+          session[:assignment_id__mutant__] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9cbbc
@@ -1,43 +1,42 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2b3c9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          nil
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9dd1b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          self
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8fb25
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9d823
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          self.import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:20b96
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3d221
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          params[:model].import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ea174
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          self.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:65efa
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get.import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5f8db
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(nil).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:91a51
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(self).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:89997
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:57f86
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params.at(:model)).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b10ed
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params.fetch(:model)).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:db0ec
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params.key?(:model)).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a0800
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(:model).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:35bf1
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(self[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:68eff
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:429d8
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[nil]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:76825
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[self]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:873a3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model__mutant__]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:fe155
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:853d7
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(nil, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:73468
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(self, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:49a03
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ba883
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, nil, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3ecd2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, self, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c6606
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7c433
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, nil)
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5b9d7
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, self)
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:886d1
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, params)
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:04f12
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, params.at(:id))
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:64b61
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, params.fetch(:id))
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d71ac
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, params.key?(:id))
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:eb772
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, :id)
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b2665
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, self[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:57b73
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, params[])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8cf37
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, params[nil])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ce1b9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, params[self])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6883a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session, params[:id__mutant__])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f1fd9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+          Object.const_get(params[:model]).import(row, session)
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:544fd
@@ -1,43 +1,42 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:886dd
@@ -1,43 +1,37 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6a6af
@@ -1,43 +1,38 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
+        if (row_header.count > 0)
+          Object.const_get(params[:model]).import(row, row_header, session, params[:id])
         else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
+          Object.const_get(params[:model]).import(row, nil, session, params[:id])
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e6cfa
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
+          nil
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:58f49
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
+          self
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f9d10
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if nil
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:55b0b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if row_header.count
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:17f82
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (nil > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:08443
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (self > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:433ce
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (row_header > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1cbce
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (self.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:eec14
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (row_header.count == 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:fef74
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (row_header.count >= 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:89b2a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if row_header.count.eql?(0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:66acd
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if row_header.count.equal?(0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e9954
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if 0
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e6354
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (row_header.count > nil)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:247a7
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (row_header.count > self)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5527a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (row_header.count > 1)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2756e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (row_header.count > (-1))
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:60fd5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if (!(row_header.count > 0))
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8a66b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if true
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8fd02
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
+          if false
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6de85
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9657a
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
+          Object.const_get(params[:model]).import(row, row_header, session, params[:id])
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:926d0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            nil
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b67fa
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            self
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:187c5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:bd72e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            self.import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4392c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a8b13
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            params[:model].import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:364aa
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            self.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:71f2d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get.import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:de727
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(nil).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5e76e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(self).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3cc13
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:56b98
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params.at(:model)).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1db19
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params.fetch(:model)).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:96c4d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params.key?(:model)).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:44113
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(:model).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9ab95
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(self[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:74c5a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ae46e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[nil]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:23e18
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[self]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:eb600
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model__mutant__]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8e624
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3ac59
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(nil, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:23efe
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(self, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a3afd
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:aec97
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:273ca
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, self, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4fc25
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:3d6c3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, nil, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d1d45
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, self, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:acfd1
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:cb99a
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, nil)
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8fdeb
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, self)
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e966d
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, params)
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d6f5c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, params.at(:id))
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:971a5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, params.fetch(:id))
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:59b9b
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, params.key?(:id))
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ab33f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, :id)
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2fe06
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, self[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4c7d6
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, params[])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a9ba7
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, params[nil])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:46dbc
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, params[self])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a76ae
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session, params[:id__mutant__])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:06891
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
+            Object.const_get(params[:model]).import(row, row_header, session)
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:54b17
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5cbb8
@@ -1,43 +1,39 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
+          Object.const_get(params[:model]).import(row, nil, session, params[:id])
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:327f2
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            nil
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:35623
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            self
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b8618
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:86d7f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            self.import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:37734
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6d306
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            params[:model].import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c810f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            self.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f24fb
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get.import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:141ea
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(nil).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:35773
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(self).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5c8f3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:895d0
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params.at(:model)).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:943a9
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params.fetch(:model)).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:90c74
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params.key?(:model)).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2d8f8
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(:model).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:c37d8
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(self[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:27374
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f75ed
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[nil]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:38143
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[self]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1cefe
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model__mutant__]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:77b86
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:85a89
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(nil, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:4a977
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(self, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e8011
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:7d271
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:faee5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, nil, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:bb494
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, self, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:87d23
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:688fc
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, nil)
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:74df6
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, self)
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:669ed
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params)
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:203e5
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params.at(:id))
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8045f
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params.fetch(:id))
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6bda3
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params.key?(:id))
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:f802c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, :id)
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:98e7e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, self[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:83d94
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params[])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:26ac8
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params[nil])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:949ae
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params[self])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:84742
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session, params[:id__mutant__])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:2f2df
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
+            Object.const_get(params[:model]).import(row, nil, session)
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:1a60a
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
+          unless (row_header.count > 0)
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:90652
@@ -1,43 +1,40 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
+        unless (params[:model] == "SignUpTopic")
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:835bb
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
+      unless ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:b85ac
@@ -1,43 +1,41 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
-    rescue
-      errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:89c0e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
-      errors << $ERROR_INFO
+      nil
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6139e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
-      errors << $ERROR_INFO
+      self
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e5378
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
-      errors << $ERROR_INFO
+      errors
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:d6fee
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
-      errors << $ERROR_INFO
+      nil << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a934e
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
-      errors << $ERROR_INFO
+      self << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:9306c
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
-      errors << $ERROR_INFO
+      $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5e253
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
-      errors << $ERROR_INFO
+      errors << nil
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:8fe88
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
-      errors << $ERROR_INFO
+      errors << self
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:09460
@@ -1,43 +1,42 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
-    rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:a8b31
@@ -1,43 +1,26 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
+    nil
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:e50aa
@@ -1,43 +1,26 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
+    self
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:5267f
@@ -1,43 +1,29 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
   errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:ca830
@@ -1,43 +1,42 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
-  file = params["file"].tempfile
-  errors = []
-  first_row_read = false
-  row_header = {}
   file.each_line do |line|
     line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
+    row_header = parse_line(line.downcase, delimiter)
+    first_row_read = true
+    if row_header.include?("email")
+      next
+    else
+      row_header = {}
+    end if (first_row_read == false)
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
-  errors
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:387f7
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
-  errors
+  nil
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:927c4
@@ -1,43 +1,43 @@
 def importFile(session, params)
   delimiter = get_delimiter(params)
   file = params["file"].tempfile
   errors = []
   first_row_read = false
   row_header = {}
   file.each_line do |line|
     line.chomp!
     if (first_row_read == false)
       row_header = parse_line(line.downcase, delimiter)
       first_row_read = true
       if row_header.include?("email")
         next
       else
         row_header = {}
       end
     end
     if line.empty?
       next
     end
     row = parse_line(line, delimiter)
     begin
       if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
         Object.const_get(params[:model]).import(row, params[:id], params[:options])
       else
         if (params[:model] == "SignUpTopic")
           session[:assignment_id] = params[:id]
           Object.const_get(params[:model]).import(row, session, params[:id])
         else
           if (row_header.count > 0)
             Object.const_get(params[:model]).import(row, row_header, session, params[:id])
           else
             Object.const_get(params[:model]).import(row, nil, session, params[:id])
           end
         end
       end
     rescue
       errors << $ERROR_INFO
     end
   end
-  errors
+  self
 end
-----------------------
evil:ImportFileController#importFile:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/import_file_controller.rb:2:6a7e7
@@ -1,43 +1,4 @@
 def importFile(session, params)
-  delimiter = get_delimiter(params)
-  file = params["file"].tempfile
-  errors = []
-  first_row_read = false
-  row_header = {}
-  file.each_line do |line|
-    line.chomp!
-    if (first_row_read == false)
-      row_header = parse_line(line.downcase, delimiter)
-      first_row_read = true
-      if row_header.include?("email")
-        next
-      else
-        row_header = {}
-      end
-    end
-    if line.empty?
-      next
-    end
-    row = parse_line(line, delimiter)
-    begin
-      if ((params[:model] == "AssignmentTeam") || (params[:model] == "CourseTeam"))
-        Object.const_get(params[:model]).import(row, params[:id], params[:options])
-      else
-        if (params[:model] == "SignUpTopic")
-          session[:assignment_id] = params[:id]
-          Object.const_get(params[:model]).import(row, session, params[:id])
-        else
-          if (row_header.count > 0)
-            Object.const_get(params[:model]).import(row, row_header, session, params[:id])
-          else
-            Object.const_get(params[:model]).import(row, nil, session, params[:id])
-          end
-        end
-      end
-    rescue
-      errors << $ERROR_INFO
-    end
-  end
   errors
 end
-----------------------
Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [ImportFileController]>
Integration:     Mutant::Integration::Null
Jobs:            1
Includes:        []
Requires:        ["./config/environment"]
Subjects:        1
Mutations:       478
Results:         478
Kills:           2
Alive:           476
Runtime:         96.20s
Killtime:        0.13s
Overhead:        72991.47%
Mutations/s:     4.97
Coverage:        0.42%
