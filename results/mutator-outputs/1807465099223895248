Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [TeamsController]>
Integration:     Mutant::Integration::Null
Jobs:            1
Includes:        []
Requires:        ["./config/environment"]
(00/278) 100% - killtime: 0.00s runtime: 0.01s overhead: 0.01s
(01/278)  33% - killtime: 0.00s runtime: 1.02s overhead: 1.02s
(01/278)  20% - killtime: 0.00s runtime: 2.02s overhead: 2.02s
(01/278)  11% - killtime: 0.00s runtime: 3.02s overhead: 3.02s
(01/278)   9% - killtime: 0.00s runtime: 4.02s overhead: 4.02s
(01/278)   6% - killtime: 0.00s runtime: 5.03s overhead: 5.03s
(01/278)   5% - killtime: 0.00s runtime: 6.03s overhead: 6.03s
(01/278)   4% - killtime: 0.00s runtime: 7.03s overhead: 7.03s
(01/278)   3% - killtime: 0.00s runtime: 8.03s overhead: 8.03s
(01/278)   3% - killtime: 0.00s runtime: 9.04s overhead: 9.04s
(01/278)   2% - killtime: 0.00s runtime: 10.04s overhead: 10.04s
(01/278)   2% - killtime: 0.00s runtime: 11.04s overhead: 11.04s
(01/278)   2% - killtime: 0.00s runtime: 12.04s overhead: 12.04s
(01/278)   2% - killtime: 0.00s runtime: 13.04s overhead: 13.04s
(01/278)   2% - killtime: 0.00s runtime: 14.04s overhead: 14.04s
(01/278)   1% - killtime: 0.00s runtime: 15.04s overhead: 15.04s
(01/278)   1% - killtime: 0.00s runtime: 16.06s overhead: 16.06s
(01/278)   1% - killtime: 0.00s runtime: 17.06s overhead: 17.06s
(01/278)   1% - killtime: 0.00s runtime: 18.06s overhead: 18.06s
(01/278)   1% - killtime: 0.00s runtime: 19.06s overhead: 19.06s
(01/278)   1% - killtime: 0.00s runtime: 20.06s overhead: 20.06s
(01/278)   1% - killtime: 0.00s runtime: 21.06s overhead: 21.06s
(01/278)   1% - killtime: 0.00s runtime: 22.06s overhead: 22.06s
(01/278)   1% - killtime: 0.00s runtime: 23.06s overhead: 23.06s
(01/278)   1% - killtime: 0.00s runtime: 24.06s overhead: 24.06s
(01/278)   0% - killtime: 0.00s runtime: 25.07s overhead: 25.07s
(01/278)   0% - killtime: 0.00s runtime: 26.08s overhead: 26.08s
(01/278)   0% - killtime: 0.00s runtime: 27.08s overhead: 27.08s
(01/278)   0% - killtime: 0.00s runtime: 28.08s overhead: 28.08s
(01/278)   0% - killtime: 0.00s runtime: 29.08s overhead: 29.08s
(01/278)   0% - killtime: 0.00s runtime: 30.08s overhead: 30.08s
(01/278)   0% - killtime: 0.00s runtime: 31.09s overhead: 31.09s
(01/278)   0% - killtime: 0.00s runtime: 32.09s overhead: 32.09s
(01/278)   0% - killtime: 0.00s runtime: 33.09s overhead: 33.09s
(01/278)   0% - killtime: 0.00s runtime: 34.09s overhead: 34.09s
(01/278)   0% - killtime: 0.00s runtime: 35.10s overhead: 35.10s
(01/278)   0% - killtime: 0.00s runtime: 36.10s overhead: 36.10s
(01/278)   0% - killtime: 0.00s runtime: 37.12s overhead: 37.12s
(01/278)   0% - killtime: 0.00s runtime: 38.12s overhead: 38.12s
(01/278)   0% - killtime: 0.00s runtime: 39.12s overhead: 39.12s
(01/278)   0% - killtime: 0.00s runtime: 40.12s overhead: 40.12s
(01/278)   0% - killtime: 0.00s runtime: 41.12s overhead: 41.12s
(01/278)   0% - killtime: 0.00s runtime: 42.12s overhead: 42.12s
(01/278)   0% - killtime: 0.00s runtime: 43.14s overhead: 43.14s
(01/278)   0% - killtime: 0.00s runtime: 44.14s overhead: 44.14s
(01/278)   0% - killtime: 0.00s runtime: 45.14s overhead: 45.14s
(01/278)   0% - killtime: 0.00s runtime: 46.14s overhead: 46.14s
(01/278)   0% - killtime: 0.00s runtime: 47.14s overhead: 47.14s
(01/278)   0% - killtime: 0.00s runtime: 48.14s overhead: 48.14s
(01/278)   0% - killtime: 0.00s runtime: 49.15s overhead: 49.15s
(01/278)   0% - killtime: 0.00s runtime: 50.15s overhead: 50.15s
(01/278)   0% - killtime: 0.00s runtime: 51.15s overhead: 51.15s
TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e855f
@@ -1,25 +1,4 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  raise
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b0257
@@ -1,25 +1,3 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:0c492
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  nil
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7ff0c
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  self
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:77bd0
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team__mutant__ = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:54480
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = nil
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:bba91
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = self
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d4f38
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e467a
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = params[:id]
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7a7c7
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = self.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c3e86
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c4a24
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(nil)
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f1599
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(self)
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:96d41
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(params)
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:266da
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(params.at(:id))
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:28b3c
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(params.fetch(:id))
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:86528
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(params.key?(:id))
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b7a5c
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(:id)
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2d21c
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(self[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f9295
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(params[])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c32c6
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(params[nil])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:09224
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(params[self])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:9d27a
@@ -1,25 +1,25 @@
 def delete
-  @team = Team.find(params[:id])
+  @team = Team.find(params[:id__mutant__])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f0fe5
@@ -1,25 +1,4 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:fa4c9
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  nil
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:dbdcb
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  self
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1185f
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course__mutant__ = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:6c9c0
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = nil
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c4bd9
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = self
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:fb40c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[:team_type])
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:38cf9
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = @team.parent_id
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:97111
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = self.find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:6fc74
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:41489
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = session[:team_type].find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2b7c6
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = self.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:ab8f8
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get.find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:89c2b
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(nil).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:98736
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(self).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:08816
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:22f3e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session.at(:team_type)).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:81eba
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session.fetch(:team_type)).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b9689
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session.key?(:team_type)).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:781e5
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(:team_type).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d2257
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(self[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:33fb7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:8381e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[nil]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:02bf7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[self]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d818c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[:team_type__mutant__]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:920b0
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[:team_type]).find
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b6afb
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[:team_type]).find(nil)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b816a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[:team_type]).find(self)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:9d59c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[:team_type]).find(@team)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:a6941
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[:team_type]).find(team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1dc99
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
+  course = Object.const_get(session[:team_type]).find(self.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4e076
@@ -1,25 +1,5 @@
 def delete
-  @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c7419
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  nil
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2d635
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  self
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f36b7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps__mutant__ = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c4ca1
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = nil
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3eff2
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = self
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:32f5b
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:80321
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = { team_id: @team.id }
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c2722
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = self.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:6d71c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2c6e0
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(nil)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:0c582
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(self)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:bf250
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where({})
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7c88f
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(nil => @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:03ee7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(self => @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:20b21
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(team_id__mutant__: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:cabd4
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(team_id: nil)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:ea920
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(team_id: self)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:da565
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(team_id: @team)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4621b
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(team_id: team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:51477
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
+  @signUps = SignedUpTeam.where(team_id: self.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7ff92
@@ -1,25 +1,6 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e19d3
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  nil
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:fe345
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  self
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:8268a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users__mutant__ = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:8a64b
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = nil
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3dc06
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = self
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e7c8a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1f352
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = { team_id: @team.id }
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:5e774
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = self.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:9a6ea
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:25d19
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(nil)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e7b48
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(self)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:01b5c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where({})
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:88794
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(nil => @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:5ca19
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(self => @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:87b08
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(team_id__mutant__: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:dc0ff
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(team_id: nil)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:46ce1
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(team_id: self)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:84a95
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(team_id: @team)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d5f96
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(team_id: team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:50a00
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
+  @teams_users = TeamsUser.where(team_id: self.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:738d3
@@ -1,25 +1,7 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:93bdf
@@ -1,25 +1,19 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
+  nil
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7de71
@@ -1,25 +1,19 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
+  self
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:0f318
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if nil
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:9582f
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (@signUps.size == 1)
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:48c75
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (@signUps.first.is_waitlisted == false)
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:54646
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) || (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:61ebc
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((!(@signUps.size == 1)) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4648c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (nil && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:0ab01
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (self && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:66fde
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (@signUps.size && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b8e34
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((nil == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:382e7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((self == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:16414
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7c06c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:edcdd
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((self.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:5dcd1
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (@signUps.size.eql?(1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d0266
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (@signUps.size.equal?(1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4096d
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (1 && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:73d12
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == nil) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4b0f1
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == self) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:de6db
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 0) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7b9b8
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == (-1)) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:70abb
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 2) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:6d672
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && nil)
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2a6c2
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && self)
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:0ff53
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && @signUps.first.is_waitlisted)
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:df66a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (nil == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:9f6ea
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (self == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:a07f7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (@signUps.first == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c4e4b
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (self.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:345aa
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (@signUps.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e58e0
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (@signUps.last.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:268f7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f75be
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (self.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:eac07
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && @signUps.first.is_waitlisted.eql?(false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:884df
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && @signUps.first.is_waitlisted.equal?(false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:02b65
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && false)
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e95a0
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == nil))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4ec4e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == true))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:de268
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if (!((@signUps.size == 1) && (@signUps.first.is_waitlisted == false)))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:97c5d
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if true
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b156e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
+  if false
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:12cc6
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
+  topic_id = @signUps.first.topic_id
+  next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+  if next_wait_listed_team
+    SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1aec7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    nil
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b38e9
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    self
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2a40e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id__mutant__ = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1950a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id = nil
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:dc815
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id = self
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2ff21
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id = @signUps.first
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d61cc
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id = self.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:494d4
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id = @signUps.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:75b5b
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id = @signUps.last.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:cbfc3
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id = signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:36076
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
+    topic_id = self.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e7eec
@@ -1,25 +1,21 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3c191
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    nil
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:31040
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    self
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:711a2
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team__mutant__ = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:82fbe
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = nil
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:6aa80
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = self
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f747f
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true)
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:54584
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).last
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e8073
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = self.first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2b65c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3402e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = { topic_id: topic_id, is_waitlisted: true }.first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:79f99
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = self.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:bd488
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where.first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:da8a7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(nil).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:0bd72
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(self).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1c82b
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where({}).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:833e7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(nil => topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:ea537
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(self => topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:20e50
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id__mutant__: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:007f8
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: nil, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:60aba
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: self, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:fc108
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4f276
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, nil => true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:6baa5
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, self => true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:95ee2
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted__mutant__: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e14a6
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: nil).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3ed2a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: false).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:55743
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:84728
@@ -1,25 +1,22 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:a3a22
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
+    nil
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:a277c
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
+    self
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:6da23
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
+    if nil
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:40dc3
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
+    if (!next_wait_listed_team)
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:87a57
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
+    if true
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:09667
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
+    if false
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:17886
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
+    SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1af75
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
+      nil
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:53627
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
+      self
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b39c3
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
+      SignUpTopic
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:dba47
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
+      next_wait_listed_team
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d2561
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
+      self.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3f9ab
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
+      SignUpTopic.assign_to_first_waiting_team
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1c4eb
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
+      SignUpTopic.assign_to_first_waiting_team(nil)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:fc833
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
+      SignUpTopic.assign_to_first_waiting_team(self)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4e3f0
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:be375
@@ -1,25 +1,14 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:04d20
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
-    @signUps.destroy_all
-  end
+  nil
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:441d7
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
-    @signUps.destroy_all
-  end
+  self
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:a8d19
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
+  if signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:58079
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
+  if nil
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:bf135
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
+  if (!@signUps)
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:fd189
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
+  if true
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:60774
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
+  if false
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b01bb
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
-  if @signUps
-    @signUps.destroy_all
-  end
+  @signUps.destroy_all
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7ef53
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
-    @signUps.destroy_all
+    nil
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:a1eb8
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
-    @signUps.destroy_all
+    self
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1fb83
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
-    @signUps.destroy_all
+    @signUps
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:bb916
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
-    @signUps.destroy_all
+    signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b8032
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
-    @signUps.destroy_all
+    self.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:54ece
@@ -1,25 +1,17 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:65d21
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
-    @teams_users.destroy_all
-  end
+  nil
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7730a
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
-    @teams_users.destroy_all
-  end
+  self
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:27260
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
+  if teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7a11d
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
+  if nil
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:10d43
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
+  if (!@teams_users)
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:976cd
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
+  if true
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:18a9b
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
+  if false
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:8e833
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
-  if @teams_users
-    @teams_users.destroy_all
-  end
+  @teams_users.destroy_all
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4e7eb
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
-    @teams_users.destroy_all
+    nil
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:cfabf
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
-    @teams_users.destroy_all
+    self
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:46d55
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
-    @teams_users.destroy_all
+    @teams_users
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:493e5
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
-    @teams_users.destroy_all
+    teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:ed11e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
-    @teams_users.destroy_all
+    self.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1c979
@@ -1,25 +1,20 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:a69e3
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
-    @team.destroy
-  end
+  nil
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f48e4
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
-    @team.destroy
-  end
+  self
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:57827
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
+  if team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2b518
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
+  if nil
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:10b92
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
+  if (!@team)
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b0f95
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
+  if true
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2b842
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
+  if false
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3ddca
@@ -1,25 +1,23 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
-  if @team
-    @team.destroy
-  end
+  @team.destroy
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b7a35
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
-    @team.destroy
+    nil
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:cbc43
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
-    @team.destroy
+    self
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:1af0c
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
-    @team.destroy
+    @team
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:5dc42
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
-    @team.destroy
+    team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:285ff
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
-    @team.destroy
+    self.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d1099
@@ -1,25 +1,23 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3a896
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  nil
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:9f5c4
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  self
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:54be1
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  "#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}"
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4eb7a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b0f2a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{nil}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f1cb2
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{self}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c3459
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{"The team \""}#{nil}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:b8fe1
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{"The team \""}#{self}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:ccfa6
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{"The team \""}#{@team}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c0bb1
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{"The team \""}#{team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:cb791
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{"The team \""}#{self.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:0e82e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{"The team \""}#{@team.name}#{nil}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:3f14e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link("#{"The team \""}#{@team.name}#{self}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e6c7d
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link(nil)
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:4ba42
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
+  undo_link(self)
   redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:e413c
@@ -1,25 +1,24 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:93a78
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  nil
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:24470
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  self
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:37d64
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  { action: "list", id: course.id }
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:8b151
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:82c2a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(nil)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d15f1
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(self)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:d5c59
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to({})
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:081bd
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(nil => "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:581bb
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(self => "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:a68bf
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action__mutant__: "list", id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:326b5
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: nil, id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c3f2a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: self, id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:f843e
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(id: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:2b76a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: "list", nil => course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:14b5a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: "list", self => course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:81fb7
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: "list", id__mutant__: course.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:98e7a
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: "list", id: nil)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:c99f8
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: "list", id: self)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7ea94
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: "list", id: course)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:02eb8
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: "list", id: self.id)
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:8fc7d
@@ -1,25 +1,25 @@
 def delete
   @team = Team.find(params[:id])
   course = Object.const_get(session[:team_type]).find(@team.parent_id)
   @signUps = SignedUpTeam.where(team_id: @team.id)
   @teams_users = TeamsUser.where(team_id: @team.id)
   if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
     topic_id = @signUps.first.topic_id
     next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
     if next_wait_listed_team
       SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
     end
   end
   if @signUps
     @signUps.destroy_all
   end
   if @teams_users
     @teams_users.destroy_all
   end
   if @team
     @team.destroy
   end
   undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
-  redirect_to(action: "list", id: course.id)
+  redirect_to(action: "list")
 end
-----------------------
evil:TeamsController#delete:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/teams_controller.rb:2:7806f
@@ -1,25 +1,4 @@
 def delete
-  @team = Team.find(params[:id])
-  course = Object.const_get(session[:team_type]).find(@team.parent_id)
-  @signUps = SignedUpTeam.where(team_id: @team.id)
-  @teams_users = TeamsUser.where(team_id: @team.id)
-  if ((@signUps.size == 1) && (@signUps.first.is_waitlisted == false))
-    topic_id = @signUps.first.topic_id
-    next_wait_listed_team = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-    if next_wait_listed_team
-      SignUpTopic.assign_to_first_waiting_team(next_wait_listed_team)
-    end
-  end
-  if @signUps
-    @signUps.destroy_all
-  end
-  if @teams_users
-    @teams_users.destroy_all
-  end
-  if @team
-    @team.destroy
-  end
-  undo_link("#{"The team \""}#{@team.name}#{"\" has been successfully deleted."}")
   redirect_to(action: "list", id: course.id)
 end
-----------------------
Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [TeamsController]>
Integration:     Mutant::Integration::Null
Jobs:            1
Includes:        []
Requires:        ["./config/environment"]
Subjects:        1
Mutations:       278
Results:         278
Kills:           1
Alive:           277
Runtime:         51.15s
Killtime:        0.00s
Overhead:        Inf%
Mutations/s:     5.44
Coverage:        0.36%
