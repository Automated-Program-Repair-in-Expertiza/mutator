Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [SignUpTopic]>
Integration:     Mutant::Integration::Null
Jobs:            1
Includes:        []
Requires:        ["./config/environment"]
(00/264) 100% - killtime: 0.00s runtime: 0.00s overhead: 0.00s
(01/264)  16% - killtime: 0.00s runtime: 1.01s overhead: 1.01s
(01/264)   8% - killtime: 0.00s runtime: 2.02s overhead: 2.02s
(01/264)   5% - killtime: 0.00s runtime: 3.02s overhead: 3.02s
(01/264)   4% - killtime: 0.00s runtime: 4.02s overhead: 4.02s
(01/264)   3% - killtime: 0.00s runtime: 5.03s overhead: 5.03s
(01/264)   2% - killtime: 0.00s runtime: 6.03s overhead: 6.03s
(01/264)   2% - killtime: 0.00s runtime: 7.03s overhead: 7.03s
(01/264)   2% - killtime: 0.00s runtime: 8.04s overhead: 8.04s
(01/264)   1% - killtime: 0.00s runtime: 9.04s overhead: 9.04s
(01/264)   1% - killtime: 0.00s runtime: 10.04s overhead: 10.04s
(01/264)   1% - killtime: 0.00s runtime: 11.04s overhead: 11.04s
(01/264)   1% - killtime: 0.00s runtime: 12.04s overhead: 12.04s
(01/264)   1% - killtime: 0.00s runtime: 13.04s overhead: 13.04s
(01/264)   1% - killtime: 0.00s runtime: 14.04s overhead: 14.04s
(01/264)   1% - killtime: 0.00s runtime: 15.04s overhead: 15.04s
(01/264)   0% - killtime: 0.00s runtime: 16.04s overhead: 16.04s
(01/264)   0% - killtime: 0.00s runtime: 17.05s overhead: 17.05s
(01/264)   0% - killtime: 0.00s runtime: 18.06s overhead: 18.06s
(01/264)   0% - killtime: 0.00s runtime: 19.06s overhead: 19.06s
(01/264)   0% - killtime: 0.00s runtime: 20.06s overhead: 20.06s
(01/264)   0% - killtime: 0.00s runtime: 21.06s overhead: 21.06s
(01/264)   0% - killtime: 0.00s runtime: 22.06s overhead: 22.06s
(01/264)   0% - killtime: 0.00s runtime: 23.06s overhead: 23.06s
(01/264)   0% - killtime: 0.00s runtime: 24.07s overhead: 24.07s
(01/264)   0% - killtime: 0.00s runtime: 25.07s overhead: 25.07s
(01/264)   0% - killtime: 0.00s runtime: 26.07s overhead: 26.07s
(01/264)   0% - killtime: 0.00s runtime: 27.07s overhead: 27.07s
(01/264)   0% - killtime: 0.00s runtime: 28.08s overhead: 28.08s
(01/264)   0% - killtime: 0.00s runtime: 29.08s overhead: 29.08s
(01/264)   0% - killtime: 0.00s runtime: 30.08s overhead: 30.08s
(01/264)   0% - killtime: 0.00s runtime: 31.08s overhead: 31.08s
(01/264)   0% - killtime: 0.00s runtime: 32.08s overhead: 32.08s
(01/264)   0% - killtime: 0.00s runtime: 33.08s overhead: 33.08s
(01/264)   0% - killtime: 0.00s runtime: 34.08s overhead: 34.08s
(01/264)   0% - killtime: 0.00s runtime: 35.09s overhead: 35.09s
(01/264)   0% - killtime: 0.00s runtime: 36.13s overhead: 36.13s
(01/264)   0% - killtime: 0.00s runtime: 37.13s overhead: 37.13s
(01/264)   0% - killtime: 0.00s runtime: 38.14s overhead: 38.14s
(01/264)   0% - killtime: 0.00s runtime: 39.14s overhead: 39.14s
(01/264)   0% - killtime: 0.00s runtime: 40.14s overhead: 40.14s
(01/264)   0% - killtime: 0.00s runtime: 41.14s overhead: 41.14s
SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:80196
@@ -1,23 +1,23 @@
-def self.reassign_topic(session_user_id, assignment_id, topic_id)
+def self.reassign_topic
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6ce9d
@@ -1,23 +1,23 @@
-def self.reassign_topic(session_user_id, assignment_id, topic_id)
+def self.reassign_topic(assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:4db79
@@ -1,23 +1,23 @@
-def self.reassign_topic(session_user_id, assignment_id, topic_id)
+def self.reassign_topic(session_user_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a6240
@@ -1,23 +1,23 @@
-def self.reassign_topic(session_user_id, assignment_id, topic_id)
+def self.reassign_topic(session_user_id, assignment_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:5589f
@@ -1,23 +1,23 @@
-def self.reassign_topic(session_user_id, assignment_id, topic_id)
+def self.reassign_topic(_session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:250b8
@@ -1,23 +1,23 @@
-def self.reassign_topic(session_user_id, assignment_id, topic_id)
+def self.reassign_topic(session_user_id, _assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b0cca
@@ -1,23 +1,23 @@
-def self.reassign_topic(session_user_id, assignment_id, topic_id)
+def self.reassign_topic(session_user_id, assignment_id, _topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f10c1
@@ -1,23 +1,4 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
-  end
+  raise
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b71a4
@@ -1,23 +1,3 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
-  end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:cac1e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  nil
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:36544
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  self
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ca6e1
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment__mutant__ = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:2f586
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment = nil
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:62ad6
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment = self
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:bb490
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment = Assignment
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:49d02
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment = assignment_id
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9f422
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment = self.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f425e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment = Assignment.find
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:450cf
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment = Assignment.find(nil)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:393d8
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
+  assignment = Assignment.find(self)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:8687e
@@ -1,23 +1,4 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
-  end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:47389
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  nil
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:2ad47
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  self
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:49cde
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate__mutant__ = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ad36a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = nil
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9f2a1
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = self
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f2916
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6")
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ca6ec
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").last
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:865fe
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = self.first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b5fe3
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:4090e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = { parent_id: assignment.id, deadline_type_id: "6" }.first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:db1dc
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = self.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:3c618
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where.first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:df577
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(nil).first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c6f5d
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(self).first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d1c7e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where({}).first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e537f
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(nil => assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:208b9
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(self => assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:2787c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id__mutant__: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:7a942
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: nil, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:89d78
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: self, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:acf7e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b8603
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: self.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e6ae1
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c1003
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment.id, nil => "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b18cc
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment.id, self => "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:74604
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id__mutant__: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:8aee0
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: nil).first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e5cd5
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: self).first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:51f4a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
+  dropDate = AssignmentDueDate.where(parent_id: assignment.id).first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e5fe9
@@ -1,23 +1,5 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
-  end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:2f454
@@ -1,23 +1,6 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
-  end
+  nil
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e30a0
@@ -1,23 +1,6 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
-  end
+  self
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:456fa
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless nil
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ec569
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless (!dropDate.nil?)
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:8a819
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless (dropDate.due_at < Time.now)
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:514fd
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) || (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:84389
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!(!dropDate.nil?)) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a1e6b
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless (nil && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:23bee
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless (self && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6db7f
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless (dropDate.nil? && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c67aa
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!self) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:fe34c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:19224
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!self.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:5fcea
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && nil)
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:3d5fd
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && self)
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c3032
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && dropDate.due_at)
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:62e9e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (nil < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:18a1c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (self < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f3e32
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (dropDate < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a4ba5
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (self.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b31c7
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (dropDate.due_at == Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:fc511
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (dropDate.due_at <= Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e9277
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && dropDate.due_at.eql?(Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:35672
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && dropDate.due_at.equal?(Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ac036
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && Time.now)
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:83dd4
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (dropDate.due_at < nil))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:17c34
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (dropDate.due_at < self))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:37e74
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (dropDate.due_at < Time))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f7479
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless ((!dropDate.nil?) && (dropDate.due_at < self.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:1638b
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless (!((!dropDate.nil?) && (dropDate.due_at < Time.now)))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:8c84e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless true
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:55197
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  unless false
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b17e6
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
+  if ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f0809
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
-  unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
+  users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+  signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+  assignment = Assignment.find(assignment_id)
+  unless assignment.is_intelligent?
+    if (signup_record.is_waitlisted == false)
+      first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+      unless first_waitlisted_user.nil?
+        first_waitlisted_user.is_waitlisted = false
+        first_waitlisted_user.save
+        Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
       end
     end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
+  end
+  unless signup_record.nil?
+    signup_record.destroy
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:79009
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    nil
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:4209a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    self
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0cd15
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team__mutant__ = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:12271
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = nil
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:19180
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = self
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:55260
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = SignedUpTeam
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:8fb84
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = self.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:756f2
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = SignedUpTeam.find_team_users
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d538d
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = SignedUpTeam.find_team_users(nil, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d5c76
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = SignedUpTeam.find_team_users(self, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a8270
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = SignedUpTeam.find_team_users(session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:32635
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = SignedUpTeam.find_team_users(assignment_id, nil)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:154db
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = SignedUpTeam.find_team_users(assignment_id, self)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:232d3
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
+    users_team = SignedUpTeam.find_team_users(assignment_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:13710
@@ -1,23 +1,8 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:65e93
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    nil
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d66e5
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    self
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:3c5fa
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record__mutant__ = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f1688
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = nil
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:78519
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = self
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:cc571
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id)
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f6d9b
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).last
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:39dc6
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = self.first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:7319c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a7322
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = { topic_id: topic_id, team_id: users_team[0].t_id }.first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:afcd4
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = self.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:3278d
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where.first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:90bfc
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(nil).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:49a25
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(self).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:3cbe0
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where({}).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:79e36
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(nil => topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ae1be
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(self => topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:5a57b
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id__mutant__: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a07de
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: nil, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:33d90
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: self, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:87fe4
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9cce8
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, nil => users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6fe5b
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, self => users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:77ea0
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id__mutant__: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d409b
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: nil).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b00a9
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: self).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c6c72
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0]).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:523f2
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: self.t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e5200
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team.t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c5136
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team.at(0).t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:68c6a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team.fetch(0).t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:63dc2
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team.key?(0).t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:7ffd3
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: 0.t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:3e58d
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: self[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:aba6e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c9c19
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[nil].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e9b56
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[self].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:35a5a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[1].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6391c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[(-1)].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:00c50
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
+    signup_record = SignedUpTeam.where(topic_id: topic_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:333bb
@@ -1,23 +1,9 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:23e8f
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    nil
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:bea47
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    self
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:07753
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment__mutant__ = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f92a9
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment = nil
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:4e221
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment = self
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:33a3d
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment = Assignment
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:dabb5
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment = assignment_id
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0e83e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment = self.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9bb3a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment = Assignment.find
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d91cb
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment = Assignment.find(nil)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:4b098
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
+    assignment = Assignment.find(self)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ab8b0
@@ -1,23 +1,10 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:bda69
@@ -1,23 +1,14 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
+    nil
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:cf998
@@ -1,23 +1,14 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
+    self
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0fe68
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
+    unless nil
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:4c13a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
+    unless assignment
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b58f5
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
+    unless self.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:77947
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
+    unless (!assignment.is_intelligent?)
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0db2b
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
+    unless true
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:79766
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
+    unless false
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:2682e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
+    if assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a3401
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
+    if (signup_record.is_waitlisted == false)
+      first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+      unless first_waitlisted_user.nil?
+        first_waitlisted_user.is_waitlisted = false
+        first_waitlisted_user.save
+        Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:89968
@@ -1,23 +1,16 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
+      nil
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:e09bb
@@ -1,23 +1,16 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
+      self
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0390a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if nil
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0bdd7
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if signup_record.is_waitlisted
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:5f7cf
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if (nil == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9fcf6
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if (self == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:5195c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if (signup_record == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:421a0
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if (self.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:7d7c7
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if signup_record.is_waitlisted.eql?(false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:7de29
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if signup_record.is_waitlisted.equal?(false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:46e59
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if false
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6e7cc
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if (signup_record.is_waitlisted == nil)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:eab41
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if (signup_record.is_waitlisted == true)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:94b81
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if (!(signup_record.is_waitlisted == false))
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:499b3
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
+      if true
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:25ddb
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
+      first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+      unless first_waitlisted_user.nil?
+        first_waitlisted_user.is_waitlisted = false
+        first_waitlisted_user.save
+        Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:51923
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        nil
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f4a52
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        self
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:93322
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user__mutant__ = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:25315
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = nil
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:36335
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = self
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:aa0dc
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true)
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:52f7a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).last
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9fa1a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = self.first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a345c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:bac5e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = { topic_id: topic_id, is_waitlisted: true }.first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:14d06
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = self.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6d89e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where.first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:45cff
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(nil).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:35941
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(self).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0325a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where({}).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6d328
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(nil => topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6a58c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(self => topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:7e425
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id__mutant__: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:22f69
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: nil, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f96b7
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: self, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f79d1
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:89b46
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, nil => true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:2551e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, self => true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:174e8
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted__mutant__: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6153c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: nil).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:911b0
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: false).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:18a6a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
+        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:20b4f
@@ -1,23 +1,18 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9f54e
@@ -1,23 +1,19 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
+        nil
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:de4f1
@@ -1,23 +1,19 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
+        self
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:950d2
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
+        unless nil
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0ea94
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
+        unless first_waitlisted_user
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:8414c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
+        unless self.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f563a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
+        unless (!first_waitlisted_user.nil?)
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:b8a24
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
+        unless true
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:64965
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
+        unless false
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a4d61
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
+        if first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c34ef
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
+        first_waitlisted_user.is_waitlisted = false
+        first_waitlisted_user.save
+        Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:96489
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
+          nil
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c81aa
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
+          self
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:31b2f
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
+          first_waitlisted_user
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:25770
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
+          false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:5f074
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
+          self.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:5f0a5
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
+          first_waitlisted_user.is_waitlisted = nil
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:0ef18
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
+          first_waitlisted_user.is_waitlisted = true
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6d09e
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
+          first_waitlisted_user.is_waitlisted
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:3a6b4
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:4e911
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
+          nil
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:83239
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
+          self
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:8944c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
+          first_waitlisted_user
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:46097
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
+          self.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:efdc9
@@ -1,23 +1,22 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:83591
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          nil
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c414d
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          self
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6f821
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d2c11
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          self.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:1e739
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:94c5c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists(nil, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ce28c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists(self, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:ca0b0
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists(first_waitlisted_user, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9f4a2
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists(self.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d300a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists(assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:cf13f
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, nil)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:37759
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, self)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:60008
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
+          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:05507
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:5975c
@@ -1,23 +1,22 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f79f6
@@ -1,23 +1,20 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
-    end
-    unless signup_record.nil?
-      signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:2a4f8
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
+    nil
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:a4d50
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
+    self
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:dec9f
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
+    unless nil
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:69219
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
+    unless signup_record
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:f76a5
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
+    unless self.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:bf671
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
+    unless (!signup_record.nil?)
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:fabfa
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
+    unless true
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:61bd8
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
+    unless false
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:c3c58
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
+    if signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9873c
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
-    unless signup_record.nil?
-      signup_record.destroy
-    end
+    signup_record.destroy
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:9185c
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
-      signup_record.destroy
+      nil
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:52fad
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
-      signup_record.destroy
+      self
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:d3a0d
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
-      signup_record.destroy
+      signup_record
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:3c12a
@@ -1,23 +1,23 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
-      signup_record.destroy
+      self.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:79beb
@@ -1,23 +1,10 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
   assignment = Assignment.find(assignment_id)
   dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
-    users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
-    signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
-    assignment = Assignment.find(assignment_id)
-    unless assignment.is_intelligent?
-      if (signup_record.is_waitlisted == false)
-        first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
-        unless first_waitlisted_user.nil?
-          first_waitlisted_user.is_waitlisted = false
-          first_waitlisted_user.save
-          Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
-        end
-      end
-    end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
evil:SignUpTopic.reassign_topic:/home/expertiza_developer/Automated-Program-Repair-in-Expertiza/mutant_rails_app/app/mutator-inputs/sign_up_topic.rb:2:6611b
@@ -1,23 +1,21 @@
 def self.reassign_topic(session_user_id, assignment_id, topic_id)
-  assignment = Assignment.find(assignment_id)
-  dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
   unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
     users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
     signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
     assignment = Assignment.find(assignment_id)
     unless assignment.is_intelligent?
       if (signup_record.is_waitlisted == false)
         first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
         unless first_waitlisted_user.nil?
           first_waitlisted_user.is_waitlisted = false
           first_waitlisted_user.save
           Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
         end
       end
     end
     unless signup_record.nil?
       signup_record.destroy
     end
   end
 end
-----------------------
Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [SignUpTopic]>
Integration:     Mutant::Integration::Null
Jobs:            1
Includes:        []
Requires:        ["./config/environment"]
Subjects:        1
Mutations:       264
Results:         264
Kills:           1
Alive:           263
Runtime:         41.14s
Killtime:        0.00s
Overhead:        Inf%
Mutations/s:     6.42
Coverage:        0.38%
