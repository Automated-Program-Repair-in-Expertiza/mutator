class SignUpTopic < ActiveRecord::Base
  def self.reassign_topic(session_user_id, assignment_id, topic_id)
    assignment = Assignment.find(assignment_id)
    dropDate = AssignmentDueDate.where(parent_id: assignment.id, deadline_type_id: "6").first
    unless ((!dropDate.nil?) && (dropDate.due_at < Time.now))
      users_team = SignedUpTeam.find_team_users(assignment_id, session_user_id)
      signup_record = SignedUpTeam.where(topic_id: topic_id, team_id: users_team[0].t_id).first
      assignment = Assignment.find(assignment_id)
      unless assignment.is_intelligent?
        if (signup_record.is_waitlisted == false)
          first_waitlisted_user = SignedUpTeam.where(topic_id: topic_id, is_waitlisted: true).first
          unless first_waitlisted_user.nil?
            first_waitlisted_user.is_waitlisted = false
            first_waitlisted_user.save
            Waitlist.cancel_all_waitlists(first_waitlisted_user.team_id, assignment_id)
          end
        end
      end
      unless signup_record.nil?
        nil
      end
    end
  end
end
